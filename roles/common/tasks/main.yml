---
# ---------------------------
# Kernel-level settings layer via sysctl
# ---------------------------
# This file needs to be present in /etc/sysctl.d
# NOTE that all features present in this config file
# are not necessarily suitable to all kinds of servers,
# you will need to set some flags on/off depending on the
# server role.
- name: 'Kernel-level settings layer via sysctl'

  ########## IPv4 networking start ##############
  ###############################################

  # Controls IP packet forwarding
  - sysctl: name=net.ipv4.ip_forward value=0

  # Do not accept source routing in packets
  - sysctl: name=net.ipv4.conf.all.accept_source_route value=0
  - sysctl: name=net.ipv4.conf.default.accept_source_route value=0

  # Through ICMP redirects, a host can find out which networks
  # can be accessed from within the local network,
  # and which are the routers to be used for each such network.
  # The security problem comes from the fact that
  # ICMP packets, including ICMP redirect, are extremely
  # easy to fake and basically it would be rather easy for
  # an attacker to forge ICMP redirect packets.

  # Do not accept ICMP redirects (prevent MITM attacks)
  - sysctl: name=net.ipv4.conf.all.accept_redirects value=0
  - sysctl: name=net.ipv4.conf.all.secure_redirects value=0
  - sysctl: name=net.ipv4.conf.default.accept_redirects value=0
  - sysctl: name=net.ipv4.conf.default.secure_redirects value=0

  # Send redirects, if router, but this is just server
  - sysctl: name=net.ipv4.conf.all.send_redirects value=0
  - sysctl: name=net.ipv4.conf.default.send_redirects value=0

  # Log packets with impossible addresses to kernel log? yes
  - sysctl: name=net.ipv4.conf.all.log_martians value=1

  # Ignore all ICMP ECHO and TIMESTAMP requests sent to it via broadcast/multicast
  - sysctl: name=net.ipv4.icmp_echo_ignore_broadcasts value=1

  # Ignore Directed pings
  - sysctl: name=net.ipv4.icmp_echo_ignore_all value=1

  # Enable source validation by reversed path, as specified in RFC1812
  # (a.k.a. prevent IP spoofing)
  - sysctl: name=net.ipv4.conf.all.rp_filter value=1
  - sysctl: name=net.ipv4.conf.default.rp_filter value=1

  ########## IPv6 networking start ##############
  ###############################################

  # Number of Router Solicitations to send until assuming no routers are present.
  # This is host and not router
  - sysctl: name=net.ipv6.conf.default.router_solicitations value=0

  # Accept Router Preference in RA?
  - sysctl: name=net.ipv6.conf.default.accept_ra_rtr_pref value=0

  # Learn Prefix Information in Router Advertisement
  - sysctl: name=net.ipv6.conf.default.accept_ra_pinfo value=0

  # Setting controls whether the system will accept Hop Limit settings from a router advertisement
  - sysctl: name=net.ipv6.conf.default.accept_ra_defrtr value=0

  #router advertisements can cause the system to assign a global unicast address to an interface
  - sysctl: name=net.ipv6.conf.default.autoconf value=0

  #how many neighbor solicitations to send out per address?
  - sysctl: name=net.ipv6.conf.default.dad_transmits value=0

  # How many global unicast IPv6 addresses can be assigned to each interface?
  - sysctl: name=net.ipv6.conf.default.max_addresses value=0

  ######## TCP tuning and security #############
  ###############################################

  # TCP SYN Flood Protection
  - sysctl: name=net.ipv4.tcp_syncookies value=1
  - sysctl: name=net.ipv4.tcp_max_syn_backlog value=2048
  - sysctl: name=net.ipv4.tcp_synack_retries value=3
  - sysctl: name=net.ipv4.tcp_syn_retries value=5

  # TCP and memory optimization
  # increase TCP max buffer size setable using setsockopt()
  - sysctl: name=net.ipv4.tcp_rmem value='4096 87380 8388608'
  - sysctl: name=net.ipv4.tcp_wmem value='4096 87380 8388608'

  # increase Linux auto tuning TCP buffer limits
  - sysctl: name=net.core.rmem_max value=8388608
  - sysctl: name=net.core.wmem_max value=8388608

  # Number of packets to keep in backlog before the kernel starts dropping them
  - sysctl: name=net.core.netdev_max_backlog value=5000

  # TCP Window Scaling (as in RFC1323)
  - sysctl: name=net.ipv4.tcp_window_scaling value=0

  ######## Kernel tuning and security ###########
  ###############################################

  # Controls the System Request debugging functionality of the kernel
  - sysctl: name=kernel.sysrq value=0

  # Controls whether core dumps will append the PID to the core filename
  # Useful for debugging multi-threaded applications
  - sysctl: name=kernel.core_uses_pid value=1

  # increase system file descriptor limit
  - sysctl: name=fs.file-max value=65535

  #Allow for more PIDs
  - sysctl: name=kernel.pid_max value=65536

  #Increase system IP port limits
  - sysctl: name=net.ipv4.ip_local_port_range value='2000 65000'